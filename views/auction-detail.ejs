<%# 1. 레이아웃 지정 %>
<% layout('layout') -%>

<%# 2. 온도 계산 함수 (profile.ejs와 동일) %>
<%
function calculateTemperatureStyle(score) {
    let temp = 36.5 + (score / 10);
    temp = Math.max(30.0, Math.min(temp, 42.0)).toFixed(1);
    let colorClass = 'text-gray-600 bg-gray-100 border-gray-300'; let emoji = '🙂';
    if (temp >= 40.0) { colorClass = 'text-red-700 bg-red-100 border-red-300'; emoji = '🥵'; }
    else if (temp >= 38.0) { colorClass = 'text-orange-700 bg-orange-100 border-orange-300'; emoji = '😊'; }
    else if (temp >= 36.5) { colorClass = 'text-green-700 bg-green-100 border-green-300'; emoji = '🙂'; }
    else if (temp >= 33.0) { colorClass = 'text-blue-700 bg-blue-100 border-blue-300'; emoji = '😐'; }
    else { colorClass = 'text-blue-900 bg-blue-200 border-blue-400'; emoji = '🥶'; }
    return { temp, colorClass, emoji };
}
%>

<div class="container mt-4">
    <%# 페이지 제목 %>
    <h1 class="text-2xl font-bold text-gray-800 mb-6"><%= item.title %></h1>

    <div class="grid grid-cols-1 lg:grid-cols-12 gap-6">

        <%# 3. 좌측: 정보 (⭐️ 판매자 온도 표시) %>
        <div class="lg:col-span-5 bg-white shadow rounded-lg border border-gray-200 p-6">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">경매 정보</h2>
            <dl class="space-y-3 text-sm">
                <div class="grid grid-cols-3 gap-1">
                    <dt class="font-medium text-gray-500 col-span-1">판매자</dt>
                    <dd class="text-gray-900 col-span-2 flex items-center">
                        <span><%= item.sellerNickname %></span>
                        <%# ⭐️ 평판 점수 -> 온도로 변경 %>
                        <% const sellerTempStyle = calculateTemperatureStyle(sellerReputation); %>
                        <span class="ml-2 px-1.5 py-0.5 rounded-full text-xs font-semibold border <%= sellerTempStyle.colorClass %>">
                           <%= sellerTempStyle.emoji %> <%= sellerTempStyle.temp %>°C
                        </span>
                    </dd>
                </div>
                <%# ... (마감 시간, 파일 등 나머지 정보는 동일) ... %>
                <div class="grid grid-cols-3 gap-1"><dt class="font-medium text-gray-500 col-span-1">마감 시간</dt><dd class="text-gray-900 col-span-2"><%= new Date(item.endDate).toLocaleString() %><span id="timer" class="font-semibold text-red-600 ml-1"></span></dd></div>
                <div class="grid grid-cols-3 gap-1 items-start"><dt class="font-medium text-gray-500 col-span-1 pt-1">첨부 파일</dt><dd class="text-gray-900 col-span-2"> <% if (currentUser && currentUser.id === item.sellerId) { %><a href="/community/auction/<%= item._id %>/file" target="_blank" class="text-indigo-600 hover:underline">[ 내 파일 보기 (<%= item.originalFileName || item.fileType %>) ]</a><% } else if (item.status === 'ended' && currentUser && currentUser.id === item.highestBidderId) { %><a href="/community/auction/<%= item._id %>/file" target="_blank" class="font-semibold text-green-600 hover:underline">[ 낙찰 자료 다운로드 ]</a><% } else { %><span class="text-gray-500">[ <%= item.originalFileName || item.fileType %> (낙찰 시 다운로드 가능) ]</span><% } %></dd></div>
            </dl>
            <hr class="my-4">
            <h4 class="text-md font-semibold text-gray-900 mb-2">자료 설명</h4>
            <p class="text-sm text-gray-600 leading-relaxed" style="white-space: pre-wrap;"><%= item.description %></p>
        </div>

        <%# 4. 중앙: 입찰 (⭐️ 최고 입찰자 온도 표시) %>
        <div class="lg:col-span-4 bg-white shadow rounded-lg border border-gray-200 p-6 flex flex-col items-center justify-center">
            <h3 class="text-lg font-semibold text-gray-900 mb-2">현재 입찰가</h3>
            <p id="current-price" class="text-3xl font-bold text-indigo-600 mb-1"><%= item.currentPrice.toLocaleString() %> 원</p>
            <%# ⭐️ 평판 점수 -> 온도로 변경 %>
            <p id="highest-bidder" class="text-sm text-gray-500 mb-4 h-5 flex items-center justify-center"> <%# 높이 고정 %>
                <% if (item.highestBidderNickname) { %>
                    <span>최고 입찰자: <%= item.highestBidderNickname %></span>
                    <% const bidderTempStyle = calculateTemperatureStyle(highestBidderReputation); %>
                    <span class="ml-1 px-1.5 py-0.5 rounded-full text-xs font-semibold border <%= bidderTempStyle.colorClass %>">
                        <%= bidderTempStyle.emoji %> <%= bidderTempStyle.temp %>°C
                     </span>
                <% } else { %>
                    (입찰자 없음)
                <% } %>
            </p>
            <hr class="w-full my-4">
            <%# ... (입찰 폼 / 종료 메시지 분기는 동일) ... %>
            <% if (item.status === 'ended') { %><div class="text-center"><h4 class="text-xl font-bold text-red-600 mb-2">경매 종료됨</h4> <% if (item.highestBidderNickname) { %><p class="text-gray-700">최종 낙찰자: <strong class="font-medium"><%= item.highestBidderNickname %></strong></p> <% if (currentUser && currentUser.id === item.highestBidderId) { %><a href="/community/auction/<%= item._id %>/file" class="mt-3 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700">자료 다운로드</a><% } %><% } else { %><p class="text-gray-500">입찰자 없이 경매가 종료되었습니다.</p><% } %></div><% } else if (canBid) { %><form action="/community/auction/<%= item._id %>/bid" method="POST" class="w-full space-y-3"><div><label for="bidPrice" class="block text-sm font-medium text-gray-700">입찰 금액</label><div class="mt-1 relative rounded-md shadow-sm"><div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"><span class="text-gray-500 sm:text-sm"> ₩ </span></div><input type="number" name="bidPrice" id="bidPrice" placeholder="현재가보다 높은 금액" min="<%= item.currentPrice + 1 %>" required class="focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-7 pr-12 sm:text-sm border-gray-300 rounded-md"></div></div><button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700">즉시 입찰하기</button></form><small class="block text-center text-xs text-gray-500 mt-2">마감 1분 전 입찰 시 1분 연장됩니다.</small><% } else if (currentUser && currentUser.id === item.sellerId) { %><p class="text-center text-gray-500">본인이 등록한 경매입니다.</p><% } else if (!currentUser) { %><p class="text-center text-gray-500"><a href="/auth/login?redirect=/community/auction/<%= item._id %>" class="text-indigo-600 hover:underline font-medium">로그인</a> 후 입찰할 수 있습니다.</p><% } %>
        </div>

        <%# 5. 우측: 실시간 현황 (변경 없음) %>
        <div class="lg:col-span-3 bg-white shadow rounded-lg border border-gray-200 flex flex-col">
            <%# ... (접속자 수, 채팅창, 채팅 폼은 동일) ... %>
            <div class="px-4 py-3 border-b border-gray-200"><h3 class="text-md font-semibold text-gray-900">실시간 현황</h3></div>
            <div class="p-4 text-center text-sm text-gray-600 border-b border-gray-200"><span class="text-green-600 font-bold"><span id="user-count">?</span>명</span>이 접속 중</div>
            <div class="flex-grow flex flex-col"><h5 class="px-4 pt-3 text-sm font-medium text-gray-500">채팅</h5><div class="chat-box flex-grow overflow-y-auto p-4 space-y-3"><ul id="chat-messages" class="space-y-2"></ul></div><% if (currentUser) { %><div class="p-4 border-t border-gray-200"><form id="chat-form" class="flex space-x-2"><input type="text" id="chat-input" placeholder="메시지..." required class="flex-grow shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"><button type="submit" class="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">전송</button></form></div><% } %></div>
        </div>

    </div> <%# row 닫기 %>
</div> <%# container 닫기 %>

<%# 6. Socket.IO 스크립트 (⭐️ 최고 입찰자 온도 갱신) %>
<script src="/socket.io/socket.io.js"></script>
<script>
    // ... (온도 계산 함수 복사)
    function calculateTemperatureStyle(score) {
        let temp = 36.5 + (score / 10); temp = Math.max(30.0, Math.min(temp, 42.0)).toFixed(1);
        let colorClass = 'text-gray-600 bg-gray-100 border-gray-300'; let emoji = '🙂';
        if (temp >= 40.0) { colorClass = 'text-red-700 bg-red-100 border-red-300'; emoji = '🥵'; }
        else if (temp >= 38.0) { colorClass = 'text-orange-700 bg-orange-100 border-orange-300'; emoji = '😊'; }
        else if (temp >= 36.5) { colorClass = 'text-green-700 bg-green-100 border-green-300'; emoji = '🙂'; }
        else if (temp >= 33.0) { colorClass = 'text-blue-700 bg-blue-100 border-blue-300'; emoji = '😐'; }
        else { colorClass = 'text-blue-900 bg-blue-200 border-blue-400'; emoji = '🥶'; }
        return { temp, colorClass, emoji };
    }
    // ... (기존 전역 변수, 타이머 함수, 소켓 리스너) ...
    const socket = io(); const currentAuctionId = "<%= item._id %>"; let auctionEndDate = new Date("<%= item.endDate %>"); let timerInterval = null; let auctionEndedFlag = ("<%= item.status %>" === 'ended');
    function startTimer() { /* ... */ }
    socket.emit('join:room', currentAuctionId);
    socket.on('bid:update', (data) => {
        const priceEl = document.getElementById('current-price');
        const bidderEl = document.getElementById('highest-bidder');
        const inputEl = document.getElementById('bidPrice');
        if (priceEl) priceEl.innerText = data.newPrice.toLocaleString() + ' 원';

        // ⭐️ [수정] 최고 입찰자 온도 UI 업데이트
        if (bidderEl) {
            const bidderTempStyle = calculateTemperatureStyle(data.bidderReputation); // 점수로 스타일 계산
            bidderEl.innerHTML = `
                <span>최고 입찰자: ${data.bidderNickname}</span>
                <span class="ml-1 px-1.5 py-0.5 rounded-full text-xs font-semibold border ${bidderTempStyle.colorClass}">
                   ${bidderTempStyle.emoji} ${bidderTempStyle.temp}°C
                </span>`;
        }
        // ... (input 최소값, 타이머 재시작 로직은 동일) ...
        if (inputEl) { inputEl.min = data.newPrice + 1; if (Number(inputEl.value) <= data.newPrice) inputEl.value = ''; } if (data.newEndDate) { auctionEndDate = new Date(data.newEndDate); startTimer(); }
    });
    // ... (room:update, chat:new_message, auction:ended 리스너는 동일) ...
    socket.on('room:update', (data) => { const userCountEl = document.getElementById('user-count'); if (userCountEl) userCountEl.innerText = data.count; }); socket.on('chat:new_message', (data) => { /* ... */ }); socket.on('auction:ended', (data) => { /* ... */ });
    // ... (DOMContentLoaded 이벤트 리스너: 타이머 시작, 채팅 폼 바인딩) ...
    document.addEventListener('DOMContentLoaded', () => { startTimer(); const chatForm = document.getElementById('chat-form'); /* ... */ });
</script>

<style> /* ... (카드 호버, 채팅창 높이 스타일) ... */ </style>

